repos:
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [
          types-requests,
          types-PyYAML,
          pandas-stubs,
          types-tqdm
        ]
        args: [--ignore-missing-imports]

  - repo: https://github.com/kynan/nbstripout
    rev: 0.6.1
    hooks:
      - id: nbstripout

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-yaml
        args: ['--unsafe']
      - id: check-added-large-files
        args: ['--maxkb=50000']  # 50MB limit
      - id: check-merge-conflict
      - id: debug-statements

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-c", ".bandit"]
        additional_dependencies: ["bandit[toml]", "pbr"]

  # Enforce Conventional Commits via gitlint on commit messages
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
        stages: [commit-msg]
        args: ["--config", ".gitlint"]

  # Custom hooks for Gogooku3
  - repo: local
    hooks:
      - id: markdown-links
        name: Check Markdown local links/images
        entry: python scripts/ci/check_markdown_links.py
        language: python
        pass_filenames: false
        always_run: true
      - id: forbid-env-files-tracked
        name: Forbid tracked .env* files (except examples)
        entry: python scripts/ci/check_no_env_files.py
        language: python
        pass_filenames: false
        always_run: true
      - id: legacy-config-paths
        name: Forbid legacy config paths in docs/code
        entry: python scripts/ci/check_config_paths.py
        language: python
        pass_filenames: false
        always_run: true
      - id: audit-unused-fast
        name: Audit unused files (fast, strict)
        entry: python scripts/audit_unused.py --fast --strict --no-output
        language: python
        pass_filenames: false
        always_run: true
      - id: forbid-logs-in-repo
        name: Prevent log files from being committed
        entry: >
          bash -c 'find . \( -path "./.git" -o -path "./outputs" -o -path "./output" -o -path "./google-cloud-sdk" -o -path "./_logs" \) -prune -o
          \( -name "*.log" -o -name "*.out" -o -name "*.err" \) -type f -print |
          head -1 | grep -q . &&
          echo "ERROR Log files detected in repository!" && exit 1 || exit 0'
        language: system
        always_run: true
        pass_filenames: false
      - id: check-log-structure
        name: Check logs are in unified structure (_logs/)
        entry: >
          bash -c 'find . -path "./_logs" -prune -o -path "./outputs" -prune -o -path "./output" -prune -o -path "./google-cloud-sdk" -prune -o
          \( -name "*.log" -o -name "*.out" -o -name "*.err" \) -type f -print |
          head -1 | grep -q . &&
          echo "ERROR Log files found outside _logs/ directory!" && exit 1 || exit 0'
        language: system
        always_run: true
        pass_filenames: false

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy]  # Skip mypy in CI as it can be slow
